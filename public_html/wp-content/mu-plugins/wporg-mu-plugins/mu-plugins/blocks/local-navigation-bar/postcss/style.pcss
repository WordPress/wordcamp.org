:where(.wp-block-wporg-local-navigation-bar) {
	background-color: var(--wp--preset--color--blueberry-1);
	color: var(--wp--preset--color--white);

	padding-right: var(--wp--preset--spacing--edge-space);
	padding-left: var(--wp--preset--spacing--edge-space);

	top: var(--wp-admin--admin-bar--height, 0);

	/* If a sticky element is next, it needs to account for the nav bar offset. */
	& + :where(.wp-block-group.is-position-sticky) {
		top: calc(var(--wp-admin--admin-bar--height, 0px) + 60px);
	}
}

.wp-block-wporg-local-navigation-bar {
	height: var(--wp--custom--local-navigation-bar--spacing--height);

	@media (min-width: 890px) {
		& .global-header__wporg-logo-mark {
			position: absolute;
			top: -5px;
			left: 0;
			opacity: 0;
			padding: 16px var(--wp--style--block-gap);
			transition: all 0.2s ease-in-out;
			visibility: hidden;

			& a {
				display: block;
				color: inherit;
			}

			& svg {
				fill: currentcolor;
			}
		}

		&.is-sticking .global-header__wporg-logo-mark {
			opacity: 1;
			top: 0;
			visibility: visible;
		}
	}

	/* Reset the sticky position on small screens. */
	@media (max-width: 889px) {
		position: relative !important;
		top: 0 !important;

		/* Matches the padding of the global header button. */
		padding-right: calc(16px + var(--wp--custom--alignment--scroll-bar-width)) !important;

		& .global-header__wporg-logo-mark {
			display: none;
		}

		& + .wp-block-group.is-position-sticky {
			position: static !important;
			z-index: 0 !important;
		}
	}

	&.is-style-brush-stroke {
		position: sticky;
		padding-bottom: 8px !important; /* Override element style */

		&::before {
			content: "";
			min-height: var(--wp--custom--brush-stroke--spacing--height, 16px);
			position: absolute;
			top: 100%;
			left: 0;
			right: 0;
			width: auto;
			mask-image: url(../images/brush-stroke-mask.svg);
			mask-repeat: no-repeat;
			mask-size: cover;
			mask-position: bottom right;
			background-color: inherit;
		}
	}

	/* Navigation. */

	/* Remove padding from menu items with background color, which is used to color the modal background. */
	& .wp-block-navigation:where(.has-background) .wp-block-navigation-item a:not(.wp-element-button),
	& .wp-block-navigation:where(.has-background) .wp-block-navigation-submenu a:not(.wp-element-button) {
		padding: 0;
	}

	& .wp-block-navigation__responsive-container {

		/* Adjust the modal container so the close button is not hidden by the global header when open. */
		@media (max-width: 599px) {
			top: var(--wp-global-header-height);

			/* Matches the padding of the global header button. */
			padding-right: calc(16px + var(--wp--custom--alignment--scroll-bar-width)) !important;
			padding-left: var(--wp--preset--spacing--edge-space) !important;
			padding-top: 21px !important;
			padding-bottom: 18px !important;
		}
	}

	& .wp-block-navigation .wp-block-navigation__submenu-container {
		top: calc(100% + 10px) !important;
		left: auto !important;
		right: 0 !important;

		& .wp-block-navigation-item {
			display: block;
		}

		& .wp-block-navigation__submenu-icon {
			display: none;
		}

		& .wp-block-navigation__submenu-container {
			border: none;
			margin-left: 8px;
		}
	}
}

/* Set up the custom properties. These can be overridden by settings in theme.json. */
:where(body) {
	--wp--custom--local-navigation-bar--spacing--height: 60px;
}
